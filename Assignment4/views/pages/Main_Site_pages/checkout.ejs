<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - Outfitters</title>
    <link rel="stylesheet" href="/css/stylesheet.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .checkout-container {
            max-width: 1200px;
            margin: 50px auto;
            padding: 20px;
            display: grid;
            grid-template-columns: 1fr 400px;
            gap: 30px;
        }

        .checkout-form {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .form-section {
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .form-section h3 {
            margin-bottom: 20px;
            color: #2c3e50;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #2c3e50;
        }

        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
            transition: all 0.3s;
        }

        .form-group input:focus,
        .form-group select:focus {
            border-color: #3498db;
            outline: none;
            box-shadow: 0 0 5px rgba(52, 152, 219, 0.3);
        }

        .order-summary {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            height: fit-content;
            position: sticky;
            top: 20px;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
        }

        .summary-item:last-child {
            border-bottom: none;
        }

        .summary-total {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 2px solid #eee;
            font-size: 1.2em;
            font-weight: 600;
        }

        .place-order-btn {
            width: 100%;
            padding: 15px;
            background: #2ecc71;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 1.1em;
            font-weight: 600;
            cursor: pointer;
            margin-top: 20px;
            transition: all 0.3s;
        }

        .place-order-btn:hover {
            background: #27ae60;
            transform: translateY(-2px);
        }

        .payment-methods {
            display: flex;
            gap: 15px;
            margin-top: 15px;
        }

        .payment-method {
            flex: 1;
            padding: 15px;
            border: 2px solid #ddd;
            border-radius: 5px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
        }

        .payment-method.selected {
            border-color: #2ecc71;
            background: #f1f9f5;
        }

        .payment-method i {
            font-size: 24px;
            margin-bottom: 8px;
        }

        @media (max-width: 768px) {
            .checkout-container {
                grid-template-columns: 1fr;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <%- include('../../partials/header') %>

    <div class="checkout-container">
        <div class="checkout-form">
            <form id="shippingForm" onsubmit="event.preventDefault();">
                <div class="form-section">
                    <h3><i class="fas fa-user"></i> Contact Information</h3>
                    <div class="form-row">
                        <div class="form-group">
                            <label>First Name</label>
                            <input type="text" name="firstName" required>
                        </div>
                        <div class="form-group">
                            <label>Last Name</label>
                            <input type="text" name="lastName" required>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label>Email</label>
                            <input type="email" name="email" required>
                        </div>
                        <div class="form-group">
                            <label>Phone</label>
                            <input type="tel" name="phone" required>
                        </div>
                    </div>
                </div>

                <div class="form-section">
                    <h3><i class="fas fa-shipping-fast"></i> Shipping Address</h3>
                    <div class="form-group">
                        <label>Street Address</label>
                        <input type="text" name="address" required>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label>City</label>
                            <input type="text" name="city" required>
                        </div>
                        <div class="form-group">
                            <label>Province</label>
                            <select name="province" required>
                                <option value="">Select Province</option>
                                <option value="Punjab">Punjab</option>
                                <option value="Sindh">Sindh</option>
                                <option value="KPK">KPK</option>
                                <option value="Balochistan">Balochistan</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Postal Code</label>
                        <input type="text" name="postalCode" required>
                    </div>
                </div>

                <div class="form-section">
                    <h3><i class="fas fa-credit-card"></i> Payment Method</h3>
                    <div class="payment-methods">
                        <div class="payment-method selected" onclick="selectPayment('cod')">
                            <i class="fas fa-money-bill-wave"></i>
                            <div>Cash on Delivery</div>
                        </div>
                        <div class="payment-method" onclick="selectPayment('card')">
                            <i class="fas fa-credit-card"></i>
                            <div>Credit Card</div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <div class="order-summary">
            <h2>Order Summary</h2>
            <div id="orderItems">
                <!-- Order items will be dynamically inserted here -->
            </div>
            <button class="place-order-btn" onclick="placeOrder()">
                Place Order <i class="fas fa-arrow-right"></i>
            </button>
        </div>
    </div>

    <script>
        let selectedPayment = 'cod';

        function selectPayment(method) {
            selectedPayment = method;
            document.querySelectorAll('.payment-method').forEach(el => {
                el.classList.remove('selected');
            });
            event.currentTarget.classList.add('selected');
        }

        function loadOrderSummary() {
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const orderItems = document.getElementById('orderItems');
            
            if (cart.length === 0) {
                window.location.href = '/cart';
                return;
            }

            let total = 0;
            const itemsHtml = cart.map(item => {
                const itemTotal = item.price * item.quantity;
                total += itemTotal;
                return `
                    <div class="summary-item">
                        <span>${item.title} x ${item.quantity}</span>
                        <span>PKR ${itemTotal.toLocaleString()}</span>
                    </div>
                `;
            }).join('');

            orderItems.innerHTML = `
                ${itemsHtml}
                <div class="summary-item">
                    <span>Subtotal</span>
                    <span>PKR ${total.toLocaleString()}</span>
                </div>
                <div class="summary-item">
                    <span>Shipping</span>
                    <span>Free</span>
                </div>
                <div class="summary-item">
                    <span>Tax (5%)</span>
                    <span>PKR ${(total * 0.05).toLocaleString()}</span>
                </div>
                <div class="summary-item summary-total">
                    <span>Total</span>
                    <span>PKR ${(total * 1.05).toLocaleString()}</span>
                </div>
            `;
        }

        async function placeOrder() {
            const form = document.getElementById('shippingForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            try {
                const formElements = form.elements;
                const cart = JSON.parse(localStorage.getItem('cart')) || [];
                
                if (cart.length === 0) {
                    alert('Your cart is empty!');
                    return;
                }

                // Calculate total
                const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
                const tax = subtotal * 0.05;
                const total = subtotal + tax;

                const orderData = {
                    customer: {
                        firstName: formElements['firstName'].value.trim(),
                        lastName: formElements['lastName'].value.trim(),
                        email: formElements['email'].value.trim(),
                        phone: formElements['phone'].value.trim()
                    },
                    shipping: {
                        address: formElements['address'].value.trim(),
                        city: formElements['city'].value.trim(),
                        province: formElements['province'].value.trim(),
                        postalCode: formElements['postalCode'].value.trim()
                    },
                    paymentMethod: selectedPayment || 'cod',
                    items: cart.map(item => ({
                        productId: item.id,
                        title: item.title,
                        price: Number(item.price),
                        quantity: Number(item.quantity),
                        image: item.image
                    }))
                };

                const response = await fetch('/api/place-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify(orderData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || `HTTP error! status: ${response.status}`);
                }

                const result = await response.json();
                console.log('Server Response:', result);

                if (result.success) {
                    // Store complete order data including the order ID and PDF URL
                    const completeOrder = {
                        ...orderData,
                        orderId: result.orderId,
                        pdfUrl: result.pdfUrl,
                        subtotal: result.subtotal,
                        tax: result.tax,
                        total: result.total
                    };
                    console.log('Storing order data:', completeOrder);
                    localStorage.setItem('lastOrder', JSON.stringify(completeOrder));
                    localStorage.removeItem('cart');
                    window.location.href = '/order-confirmation';
                } else {
                    throw new Error(result.message || 'Failed to place order');
                }
            } catch (error) {
                console.error('Error details:', error);
                alert('Failed to place order: ' + (error.message || 'Please try again'));
            }
        }

        // Load order summary when page loads
        loadOrderSummary();
    </script>
</body>
</html> 