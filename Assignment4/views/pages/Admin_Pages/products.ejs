<!DOCTYPE html>
<html>
<head>
    <title>Products Management</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .products-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .add-product-btn {
            background: linear-gradient(to right, #3498db, #2980b9);
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .add-product-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 25px;
            margin-bottom: 30px;
        }

        .product-card {
            flex: 0 0 calc(33.333% - 17px);
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.3s ease;
            position: relative;
            min-width: 300px;
        }

        .product-card:hover {
            transform: translateY(-5px);
        }

        .product-image {
            width: 100%;
            height: 200px;
            object-fit: contain;
            display: flex;
            justify-content: center;
        }

        .product-info {
            padding: 20px;
        }

        .product-title {
            font-size: 1.2em;
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .product-price {
            color: #3498db;
            font-weight: bold;
            font-size: 1.1em;
        }

        .product-category {
            color: #7f8c8d;
            font-size: 0.9em;
            margin-bottom: 15px;
        }

        .product-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .action-btn {
            flex: 1;
            padding: 8px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .edit-btn {
            background-color: #f1c40f;
            color: #2c3e50;
        }

        .delete-btn {
            background-color: #e74c3c;
            color: white;
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .featured-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #2ecc71;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8em;
        }

        .header-actions {
            display: flex;
            gap: 20px;
            align-items: center;
        }

        .search-bar {
            display: flex;
            gap: 10px;
        }

        .search-bar input {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 250px;
        }

        .filters select {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-right: 10px;
        }

        .low-stock-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #e74c3c;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8em;
        }

        .product-meta {
            display: flex;
            justify-content: space-between;
            margin: 10px 0;
            font-size: 0.9em;
            color: #7f8c8d;
        }

        .price {
            font-size: 1.2em;
            font-weight: bold;
            color: #2ecc71;
            margin: 10px 0;
        }

        .advanced-filters {
            background: white;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .filter-group {
            display: flex;
            gap: 15px;
            margin-top: 15px;
        }

        .filter-item {
            flex: 1;
        }

        .filter-item label {
            display: block;
            margin-bottom: 5px;
            color: #666;
            font-size: 0.9em;
        }

        .search-bar {
            position: relative;
        }

        .search-icon {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
        }

        .search-bar input {
            padding-left: 35px;
        }

        .card-badges {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            flex-direction: column;
            gap: 5px;
            z-index: 1;
        }

        .badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8em;
            font-weight: 500;
        }

        .badge.featured {
            background: #f1c40f;
            color: #2c3e50;
        }

        .badge.out-of-stock {
            background: #e74c3c;
            color: white;
        }

        .badge.low-stock {
            background: #f39c12;
            color: white;
        }

        .image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .image-overlay {
            opacity: 1;
        }

        .quick-actions {
            display: flex;
            gap: 10px;
        }

        .quick-action-btn {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: none;
            background: white;
            color: #2c3e50;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .quick-action-btn:hover {
            transform: scale(1.1);
        }

        .stock-controls {
            display: flex;
            align-items: center;
            gap: 10px;
            margin: 20px 0;
        }

        .stock-controls button {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: none;
            background: #3498db;
            color: white;
            font-size: 1.2em;
            cursor: pointer;
        }

        .stock-controls input {
            width: 100px;
            text-align: center;
            font-size: 1.2em;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }

        .modal-content {
            background: white;
            border-radius: 10px;
            width: 90%;
            max-width: 500px;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 0;
        }

        .modal-header {
            padding: 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .close-modal {
            font-size: 24px;
            cursor: pointer;
            color: #666;
        }

        .modal-body {
            padding: 20px;
        }

        .modal-actions {
            padding: 20px;
            border-top: 1px solid #eee;
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .stock-controls {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 20px;
        }

        .stock-btn {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: none;
            background: #3498db;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #stockLevel {
            width: 100px;
            text-align: center;
            font-size: 1.2em;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .warning {
            color: #e74c3c;
            font-size: 0.9em;
            margin-top: 10px;
        }

        .filters-section {
            margin-bottom: 30px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .search-sort {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
        }

        .search-bar {
            flex: 1;
            display: flex;
            gap: 10px;
        }

        .search-bar input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
        }

        .search-bar button {
            padding: 10px 20px;
            background: #3498db;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .search-bar button:hover {
            background: #2980b9;
        }

        .sort-options select {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
            min-width: 200px;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin: 30px 0;
            flex-wrap: wrap;
        }

        .page-link {
            min-width: 40px;
            height: 40px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            background: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            color: #333;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .page-link:hover {
            background: #f8f9fa;
            border-color: #3498db;
        }

        .page-link.active {
            background: #3498db;
            color: white;
            border-color: #3498db;
        }

        .page-link.disabled {
            opacity: 0.5;
            pointer-events: none;
        }

        .pagination-info {
            text-align: center;
            margin-bottom: 20px;
            color: #666;
            font-size: 0.9em;
        }

        @media (max-width: 1200px) {
            .products-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .products-grid {
                grid-template-columns: 1fr;
            }
        }

        /* Add more styles as needed */
    </style>
</head>
<body>
    <div class="products-container">
        <div class="products-header">
            <h2>Products Management</h2>
            <div class="header-actions">
                <div class="search-sort">
                    <div class="search-bar">
                        <input type="text" 
                               id="searchInput" 
                               placeholder="Search products..." 
                               value="<%= typeof search !== 'undefined' ? search : '' %>">
                        <button onclick="applyFilters(true)">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="sort-options">
                        <select id="sortSelect" onchange="applyFilters(true)">
                            <option value="default" <%= sortBy === 'default' ? 'selected' : '' %>>Default</option>
                            <option value="price-asc" <%= sortBy === 'price-asc' ? 'selected' : '' %>>Price: Low to High</option>
                            <option value="price-desc" <%= sortBy === 'price-desc' ? 'selected' : '' %>>Price: High to Low</option>
                            <option value="newest" <%= sortBy === 'newest' ? 'selected' : '' %>>Newest First</option>
                        </select>
                    </div>
                </div>
                <a href="/admin/products/create" class="add-product-btn">
                    <i class="fas fa-plus"></i> Add New Product
                </a>
            </div>
        </div>

        <div id="productsGrid" class="products-grid">
            <% products.forEach(product => { %>
                <div class="product-card">
                    <div class="card-badges">
                        <% if (product.isFeatured) { %>
                            <span class="badge featured">
                                <i class="fas fa-star"></i> Featured
                            </span>
                        <% } %>
                        <% if (product.stock <= 0) { %>
                            <span class="badge out-of-stock">Out of Stock</span>
                        <% } else if (product.stock <= 10) { %>
                            <span class="badge low-stock">Low Stock: <%= product.stock %></span>
                        <% } %>
                    </div>
                    <div class="product-image">
                        <img src="/<%= product.imageSrc %>" alt="<%= product.title %>">
                        <div class="image-overlay">
                            <div class="quick-actions">
                                <button onclick="showStockModal('<%= product._id %>', '<%= product.title %>', '<%= product.stock %>')" 
                                        class="quick-action-btn">
                                    <i class="fas fa-boxes"></i>
                                </button>
                                <a href="/admin/products/edit/<%= product._id %>" class="quick-action-btn">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button onclick="deleteProduct('<%= product._id %>', '<%= product.title %>')" class="quick-action-btn">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="product-info">
                        <h3><%= product.title %></h3>
                        <div class="product-meta">
                            <span class="category">
                                <i class="fas fa-tag"></i> <%= product.category %>
                            </span>
                            <span class="stock <%= product.stock <= 10 ? 'low' : '' %>">
                                <i class="fas fa-boxes"></i> Stock: <%= product.stock %>
                            </span>
                        </div>
                        <div class="price">PKR <%= product.price.toLocaleString() %></div>
                        <p class="description"><%= product.description %></p>
                    </div>
                </div>
            <% }); %>
        </div>

        <div class="pagination-info">
            Showing <%= Math.min(1 + (currentPage - 1) * 3, totalItems) %> to <%= Math.min(currentPage * 3, totalItems) %> of <%= totalItems %> products
        </div>

        <div class="pagination">
            <% if (totalPages > 1) { %>
                <% if (currentPage > 1) { %>
                    <a href="/admin/products?page=1&search=<%= search %>&sortBy=<%= sortBy %>" class="page-link" title="First Page">
                        <i class="fas fa-angle-double-left"></i>
                    </a>
                    <a href="/admin/products?page=<%= currentPage - 1 %>&search=<%= search %>&sortBy=<%= sortBy %>" class="page-link">
                        <i class="fas fa-angle-left"></i>
                    </a>
                <% } %>

                <% for(let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                    <a href="/admin/products?page=<%= i %>&search=<%= search %>&sortBy=<%= sortBy %>" 
                       class="page-link <%= currentPage === i ? 'active' : '' %>">
                        <%= i %>
                    </a>
                <% } %>

                <% if (currentPage < totalPages) { %>
                    <a href="/admin/products?page=<%= currentPage + 1 %>&search=<%= search %>&sortBy=<%= sortBy %>" class="page-link">
                        <i class="fas fa-angle-right"></i>
                    </a>
                    <a href="/admin/products?page=<%= totalPages %>&search=<%= search %>&sortBy=<%= sortBy %>" class="page-link" title="Last Page">
                        <i class="fas fa-angle-double-right"></i>
                    </a>
                <% } %>
            <% } %>
        </div>
    </div>

   <!-- Quick Stock Edit Modal -->
<div id="stockModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Update Stock Level</h3>
            <span class="close-modal" onclick="closeModal('stockModal')">&times;</span>
        </div>
        <form id="stockForm" onsubmit="updateStock(event)">
            <input type="hidden" id="stockProductId">
            <div class="stock-controls">
                <button type="button" class="stock-btn" onclick="adjustStock(-1)">
                    <i class="fas fa-minus"></i>
                </button>
                <input type="number" id="stockLevel" min="0" required class="stock-input">
                <button type="button" class="stock-btn" onclick="adjustStock(1)">
                    <i class="fas fa-plus"></i>
                </button>
            </div>
            <div class="stock-info">
                <p>Current Product: <span id="stockProductName"></span></p>
            </div>
            <div class="modal-actions">
                <button type="button" class="cancel-btn" onclick="closeModal('stockModal')">Cancel</button>
                <button type="submit" class="confirm-btn">Update Stock</button>
            </div>
        </form>
    </div>
</div>

<style>
    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
        justify-content: center;
        align-items: center;
        overflow: hidden;
    }
    .modal-content {
        background-color: #fff;
        border-radius: 12px;
        width: 400px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        animation: modalFadeIn 0.3s ease-out;
    }
    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    .modal-header h3 {
        margin: 0;
        font-size: 24px;
        color: #333;
    }
    .close-modal {
        font-size: 28px;
        color: #333;
        cursor: pointer;
        transition: color 0.3s ease;
    }
    .close-modal:hover {
        color: #ff6b81;
    }

    /* Stock Controls Styles */
    .stock-controls {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px;
    }
    .stock-btn {
        background-color: #ff6b81;
        color: white;
        font-size: 20px;
        border: none;
        border-radius: 50%;
        padding: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 50px;
        height: 50px;
    }
    .stock-btn:hover {
        background-color: #ff4c61;
        transform: translateY(-2px);
    }

    .stock-input {
        font-size: 18px;
        text-align: center;
        border: 2px solid #ddd;
        border-radius: 8px;
        padding: 8px;
        width: 80px;
        margin: 0 10px;
        transition: border-color 0.3s ease;
    }
    .stock-input:focus {
        border-color: #ff6b81;
        outline: none;
    }

    /* Modal Actions Buttons */
    .modal-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }
    .cancel-btn,
    .confirm-btn {
        padding: 12px 20px;
        font-size: 16px;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }
    .cancel-btn {
        background-color: #f0f0f0;
        color: #333;
    }
    .cancel-btn:hover {
        background-color: #e0e0e0;
        transform: translateY(-2px);
    }
    .confirm-btn {
        background-color: #4CAF50;
        color: white;
    }
    .confirm-btn:hover {
        background-color: #45a049;
        transform: translateY(-2px);
    }

    /* Modal fade-in animation */
    @keyframes modalFadeIn {
        0% {
            opacity: 0;
            transform: translateY(-50px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<script>
    // Example JavaScript to show the modal and handle stock adjustments
    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    function adjustStock(amount) {
        let stockLevelInput = document.getElementById('stockLevel');
        let newStockLevel = parseInt(stockLevelInput.value) + amount;
        if (newStockLevel >= 0) {
            stockLevelInput.value = newStockLevel;
        }
    }

    function updateStock(event) {
        event.preventDefault();
        // Handle stock update logic here
        console.log('Stock updated');
        closeModal('stockModal');
    }
</script>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Confirm Deletion</h3>
                <span class="close-modal" onclick="closeModal('deleteModal')">&times;</span>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <span id="deleteItemName"></span>?</p>
                <p class="warning">This action cannot be undone.</p>
            </div>
            <div class="modal-actions">
                <button class="cancel-btn" onclick="closeModal('deleteModal')">Cancel</button>
                <button class="delete-btn" onclick="confirmDelete()">Delete</button>
            </div>
        </div>
    </div>

    <script>
    let currentProducts = JSON.parse('<%- JSON.stringify(products) %>');
    let timeout = null;

    function applyFilters(updateUrl = false) {
        const searchQuery = document.getElementById('searchInput').value;
        const sortBy = document.getElementById('sortSelect').value;
        const page = 1;

        if (updateUrl) {
            window.location.href = `/admin/products?page=${page}&search=${encodeURIComponent(searchQuery)}&sortBy=${sortBy}`;
        }
    }

    // Add debounced search
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
        searchInput.addEventListener('keyup', () => {
            clearTimeout(timeout);
            timeout = setTimeout(() => applyFilters(true), 500);
        });
    }

    function updateProductsGrid() {
        const grid = document.getElementById('productsGrid');
        grid.innerHTML = currentProducts.map(product => `
            <div class="product-card">
                <!-- Product card HTML template -->
            </div>
        `).join('');
    }

    function quickEditStock(productId, currentStock) {
        document.getElementById('productId').value = productId;
        document.getElementById('stockLevel').value = currentStock;
        document.getElementById('stockModal').style.display = 'block';
    }

    function adjustStock(amount) {
        const input = document.getElementById('stockLevel');
        input.value = Math.max(0, parseInt(input.value) + amount);
    }

    async function updateStock(event) {
        event.preventDefault();
        const productId = document.getElementById('productId').value;
        const newStock = document.getElementById('stockLevel').value;

        try {
            const response = await fetch(`/api/products/${productId}/stock`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ stock: newStock })
            });

            if (response.ok) {
                closeStockModal();
                // Update the product in the current list
                const index = currentProducts.findIndex(p => p._id === productId);
                if (index !== -1) {
                    currentProducts[index].stock = parseInt(newStock);
                    updateProductsGrid();
                }
            }
        } catch (error) {
            console.error('Error updating stock:', error);
        }
    }

    function closeStockModal() {
        document.getElementById('stockModal').style.display = 'none';
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
        const modal = document.getElementById('stockModal');
        if (event.target === modal) {
            closeStockModal();
        }
    }

    let deleteCallback = null;

    function showStockModal(productId, productName, currentStock) {
        document.getElementById('stockProductId').value = productId;
        document.getElementById('stockProductName').textContent = productName;
        document.getElementById('stockLevel').value = currentStock;
        document.getElementById('stockModal').style.display = 'block';
    }

    function showDeleteModal(itemName, callback) {
        document.getElementById('deleteItemName').textContent = itemName;
        document.getElementById('deleteModal').style.display = 'block';
        deleteCallback = callback;
    }

    function confirmDelete() {
        if (deleteCallback) {
            deleteCallback();
        }
        closeModal('deleteModal');
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
        if (modalId === 'deleteModal') {
            deleteCallback = null;
        }
    }

    function deleteProduct(productId, productName) {
        showDeleteModal(productName, () => {
            window.location.href = `/admin/products/delete/${productId}`;
        });
    }

    function deleteCategory(categoryId, categoryName) {
        showDeleteModal(categoryName, () => {
            window.location.href = `/admin/categories/delete/${categoryId}`;
        });
    }

    // Close modals when clicking outside
    window.onclick = function(event) {
        if (event.target.classList.contains('modal')) {
            event.target.style.display = 'none';
        }
    }
    </script>
</body>
</html>
