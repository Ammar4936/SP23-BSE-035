<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Confirmed - Outfitters</title>
    <link rel="stylesheet" href="/css/stylesheet.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .confirmation-container {
            max-width: 800px;
            margin: 50px auto;
            padding: 40px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .success-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .success-icon {
            color: #2ecc71;
            font-size: 5em;
            margin-bottom: 20px;
            animation: scaleIn 0.5s ease-out;
        }

        @keyframes scaleIn {
            from { transform: scale(0); opacity: 0; }
            to { transform: scale(1); opacity: 1; }
        }

        .order-details {
            background: #f9f9f9;
            padding: 30px;
            border-radius: 10px;
        }

        .detail-section {
            margin-bottom: 30px;
        }

        .detail-section h3 {
            color: #2c3e50;
            border-bottom: 2px solid #eee;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }

        .detail-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .detail-item {
            margin-bottom: 15px;
        }

        .detail-label {
            font-weight: 600;
            color: #7f8c8d;
            margin-bottom: 5px;
        }

        .order-items {
            margin-top: 20px;
        }

        .order-item {
            display: flex;
            justify-content: space-between;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
        }

        .total-section {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 2px solid #eee;
        }

        .total-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-size: 1.1em;
        }

        .total-row.final {
            font-weight: 600;
            font-size: 1.2em;
            color: #2c3e50;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }

        .action-button {
            display: inline-flex;
            align-items: center;
            padding: 15px 30px;
            border-radius: 5px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s;
        }

        .action-button i {
            margin-right: 10px;
        }

        .continue-shopping {
            background: #3498db;
            color: white;
        }

        .download-invoice {
            background: #2ecc71;
            color: white;
        }

        .download-invoice:hover {
            background: #27ae60;
            transform: translateY(-2px);
        }

        .download-invoice.disabled {
            background: #95a5a6;
            cursor: not-allowed;
            pointer-events: none;
        }

        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #ffffff;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s linear infinite;
            margin-right: 10px;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .confirmation-container {
                margin: 20px;
                padding: 20px;
            }

            .detail-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <%- include('../../partials/header') %>

    <div class="confirmation-container">
        <div class="success-header">
            <i class="fas fa-check-circle success-icon"></i>
            <h1>Order Confirmed!</h1>
            <p>Thank you for your purchase. Your order has been successfully placed.</p>
        </div>

        <div class="order-details">
            <div class="detail-section">
                <h3><i class="fas fa-user"></i> Customer Information</h3>
                <div class="detail-grid" id="customerInfo"></div>
            </div>

            <div class="detail-section">
                <h3><i class="fas fa-shipping-fast"></i> Shipping Details</h3>
                <div class="detail-grid" id="shippingInfo"></div>
            </div>

            <div class="detail-section">
                <h3><i class="fas fa-shopping-cart"></i> Order Summary</h3>
                <div class="order-items" id="orderItems"></div>
            </div>
        </div>

        <div class="action-buttons">
            <a href="/shop" class="action-button continue-shopping">
                <i class="fas fa-shopping-bag"></i>
                Continue Shopping
            </a>
            <a href="#" id="downloadBill" class="action-button download-invoice">
                <i class="fas fa-file-pdf"></i>
                Download Invoice
            </a>
        </div>
    </div>

    <script>
        function displayOrderDetails() {
            const order = JSON.parse(localStorage.getItem('lastOrder'));
            if (!order) {
                window.location.href = '/shop';
                return;
            }

            console.log('Order data in confirmation:', order);

            // Display customer information
            document.getElementById('customerInfo').innerHTML = `
                <div class="detail-item">
                    <div class="detail-label">Name</div>
                    <div>${order.customer.firstName} ${order.customer.lastName}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Email</div>
                    <div>${order.customer.email}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Phone</div>
                    <div>${order.customer.phone}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Order ID</div>
                    <div>#${order.orderId}</div>
                </div>
            `;

            // Display shipping information
            document.getElementById('shippingInfo').innerHTML = `
                <div class="detail-item">
                    <div class="detail-label">Address</div>
                    <div>${order.shipping.address}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">City</div>
                    <div>${order.shipping.city}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Province</div>
                    <div>${order.shipping.province}</div>
                </div>
                <div class="detail-item">
                    <div class="detail-label">Postal Code</div>
                    <div>${order.shipping.postalCode}</div>
                </div>
            `;

            // Display order items and totals
            const itemsHtml = order.items.map(item => `
                <div class="order-item">
                    <span>${item.title} x ${item.quantity}</span>
                    <span>PKR ${(item.price * item.quantity).toLocaleString()}</span>
                </div>
            `).join('');

            document.getElementById('orderItems').innerHTML = `
                ${itemsHtml}
                <div class="total-section">
                    <div class="total-row">
                        <span>Subtotal</span>
                        <span>PKR ${order.subtotal.toLocaleString()}</span>
                    </div>
                    <div class="total-row">
                        <span>Tax (5%)</span>
                        <span>PKR ${order.tax.toLocaleString()}</span>
                    </div>
                    <div class="total-row final">
                        <span>Total</span>
                        <span>PKR ${order.total.toLocaleString()}</span>
                    </div>
                </div>
            `;

            // Handle PDF download button
            const downloadBtn = document.getElementById('downloadBill');
            if (order.pdfUrl) {
                console.log('PDF URL found:', order.pdfUrl);
                downloadBtn.addEventListener('click', async (e) => {
                    e.preventDefault();
                    try {
                        // Show loading state
                        downloadBtn.innerHTML = `
                            <span class="loading-spinner"></span>
                            Downloading...
                        `;
                        downloadBtn.classList.add('disabled');

                        console.log('Attempting to fetch PDF from:', order.pdfUrl);
                        const response = await fetch(order.pdfUrl);
                        
                        if (!response.ok) {
                            console.error('PDF fetch failed:', response.status, response.statusText);
                            throw new Error(`Failed to download PDF: ${response.statusText}`);
                        }

                        const blob = await response.blob();
                        console.log('PDF blob received:', blob.size, 'bytes');

                        // Create and trigger download
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = `Outfitters-Order-${order.orderId}.pdf`;
                        document.body.appendChild(a);
                        a.click();
                        
                        // Cleanup
                        window.URL.revokeObjectURL(url);
                        document.body.removeChild(a);

                        // Restore button state
                        downloadBtn.innerHTML = `
                            <i class="fas fa-file-pdf"></i>
                            Download Invoice
                        `;
                        downloadBtn.classList.remove('disabled');
                    } catch (error) {
                        console.error('Download error:', error);
                        alert('Failed to download invoice: ' + error.message);
                        
                        // Restore button state
                        downloadBtn.innerHTML = `
                            <i class="fas fa-file-pdf"></i>
                            Download Invoice
                        `;
                        downloadBtn.classList.remove('disabled');
                    }
                });
            } else {
                console.log('No PDF URL found in order data');
                downloadBtn.classList.add('disabled');
                downloadBtn.innerHTML = `
                    <i class="fas fa-exclamation-circle"></i>
                    Invoice Unavailable
                `;
            }

            // Increase the timeout to ensure user has time to download
            setTimeout(() => {
                localStorage.removeItem('lastOrder');
            }, 30000); // 30 seconds
        }

        // Display order details when page loads
        displayOrderDetails();
    </script>
</body>
</html> 